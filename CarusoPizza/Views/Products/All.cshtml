@model AllProductsQueryModel

@{
    ViewBag.Title = "Menu";
}

<form method="get">
    <div class="row mb-5">
        <div class="form-group col-md-4">
            <label asp-for="SearchTerm"></label>
            <input asp-for="SearchTerm" class="form-control" placeholder="Search product">
        </div>
    </div>
</form>
<div class="row">
   
        @*if (i == 1)
        {
            <div class="col-sm-12 offset-lg-2 col-lg-8 offset-xl-3 col-xl-6">
                <center>
                    <h2 class="heading-margin text-center">PIZZAS</h2>
                </center>
            </div>*@
        @{ 
            var orderedProducts = Model.Products
                .OrderBy(p => p.CategoryId)
                .ToList();
        }

        @foreach (var product in orderedProducts)
        {

            <div class="col-md-4">
                <div class="card mb-3">
                    <img class="card-img-top" src="@product.ImageUrl">
                    <div class="card-body text-center">
                        <h5 class="card-title text-center">@product.Name - @product.Price lv.</h5>
                        <p class="card-text">@product.Description</p>
                        @if (User.IsAdmin())
                        {
                            <a asp-controller="Products" asp-action="Edit" asp-route-id="@product.Id" class="btn btn-info">Edit</a>
                            <a asp-controller="Products" asp-action="Delete" asp-route-id="@product.Id" class="btn btn-danger">Delete</a>
                            <a asp-controller="Products" asp-action="Stop" asp-route-id="@product.Id" class="btn btn-warning">Stop</a>
                        }
                        else
                        {
                            <a asp-controller="OrderProduct" asp-action="Order" asp-route-id="@product.Id" class="btn btn-primary">Choose</a>
                        }

                    </div>
                </div>
            </div>

        }
</div>

@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalProducts / AllProductsQueryModel.ProductsPerPage);
}

<div class="row">
    <div class="col-md-6">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="Products"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-searchTerm="@Model.SearchTerm">Previous page</a>
    </div>
    <div class="col-md-6">
        <a class="btn btn-primary float-left @(Model.CurrentPage == maxPage ? "disabled" : string.Empty)"
           asp-controller="Products"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-searchTerm="@Model.SearchTerm">Next page</a>
    </div>
</div>


